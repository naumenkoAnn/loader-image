<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-03-21 at 13:26:30.
 */
class LoaderImageTest extends PHPUnit_Framework_TestCase {

    /**
     * @var LoadImage
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() 
    {    
        $this->object = new LoaderImage;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() 
    {
        
    }

    /**
     * @covers LoadImage::loadByUrl
     * @todo   Implement testLoadByUrl().
     */
    public function testLoadByUrl()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers LoadImage::loadByArray
     * @todo   Implement testLoadByArray().
     */
    public function testLoadByArray() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }


    /**
     * @covers LoadImage::setUploadsDir
     * @todo   Implement testSetUploadsDir().
     */
    public function testSetUploadsDir() 
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers LoadImage::isAllowedExtension
     * @todo   Implement testIsAllowedExtension().
     * @dataProvider isallowedProvider
     */
    public function testIsAllowedExtension($path) 
    {
        $this->assertTrue($this->object->isAllowedExtension($path));
    }

    public function isallowedProvider() 
    {
        return array(
            array('/assets/img1.jpg'),
            array('assets/img1.jpeg'),
            array('img1.gif'),
            array('img1.png'),
            array('img1.JPG'),
            array('img1.bmp')
        ); 
    }
    /**
     * @covers LoadImage::getFileExtension
     * @todo   Implement testGetFileExtension().
     * @dataProvider extensionProvider
     */
    public function testGetFileExtension($path, $ext) 
    {
        $this->assertEquals($ext, $this->object->getFileExtension($path));
    }

    public function extensionProvider() 
    {
        return array(
            array('/assets/img1.jpg', 'jpg'),
            array('assets/img1.jpeg', 'jpeg'),
            array('img1.gif', 'gif'),
            array('img1.JPG', 'JPG')
        ); 
    }

}
